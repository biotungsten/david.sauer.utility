library(david.sauer.utility)
library(stringr)
library(ggplot2)
library(ggtext)
raw.data <-data.frame(readxl::read_xlsx("PC1RootLength.xlsx", col_types = c("text")))
treatments <- raw.data$treatment
rownames(raw.data) <- treatments
raw.data$treatment <- NULL
data.ngna <- raw.data
data.ngna[data.ngna == "NG"] <- NA
data.ngna <- sapply(data.ngna, as.numeric)
data.ng0 <- raw.data
data.ng0[data.ng0 == "NG"] <- 0
data.ng0 <- sapply(data.ng0, as.numeric)
data.ngna.aggregated <- data.frame(mean = apply(data.ngna, 1, mean))
View(data.ngna.aggregated)
typeof(raw.data[1,22])
data.ngna
mean(data.ngna[1,])
data.ngna[1,]
data.ngna.aggregated <- data.frame(mean = apply(data.ngna, 1, function(x) mean(x, na.rm = TRUE)))
View(data.ngna.aggregated)
raw.data <-data.frame(readxl::read_xlsx("PC1RootLength.xlsx", col_types = c("text")))
treatments <- raw.data$treatment
rownames(raw.data) <- treatments
raw.data$treatment <- NULL
data.ngna <- raw.data
data.ngna[data.ngna == "NG"] <- NA
data.ngna <- sapply(data.ngna, as.numeric)
data.ng0 <- raw.data
data.ng0[data.ng0 == "NG"] <- 0
data.ng0 <- sapply(data.ng0, as.numeric)
data.ngna.aggregated <- data.frame(mean = apply(data.ngna, 1, function(x) mean(x, na.rm = TRUE)),
sd = apply(data.ngna, 1, function(x) sd(x, na.rm = TRUE)))
View(data.ngna.aggregated)
raw.data <-data.frame(readxl::read_xlsx("PC1RootLength.xlsx", col_types = c("text")))
treatments <- raw.data$treatment
rownames(raw.data) <- treatments
raw.data$treatment <- NULL
data.ngna <- raw.data
data.ngna[data.ngna == "NG"] <- NA
data.ngna <- sapply(data.ngna, as.numeric)
data.ng0 <- raw.data
data.ng0[data.ng0 == "NG"] <- 0
data.ng0 <- sapply(data.ng0, as.numeric)
data.ngna.aggregated <- data.frame(mean = apply(data.ngna, 1, function(x) mean(x, na.rm = TRUE)),
sd = apply(data.ngna, 1, function(x) sd(x, na.rm = TRUE)))
data.ng0.aggregated <- data.frame(mean = apply(data.ng0, 1, function(x) mean(x, na.rm = TRUE)),
sd = apply(data.ng0, 1, function(x) sd(x, na.rm = TRUE)))
View(data.ng0.aggregated)
View(data.ngna.aggregated)
sd(c(0.05))
data.ngna.aggregated[is.na(data.ngna.aggregated)] <- 0
View(data.ngna.aggregated)
raw.data <-data.frame(readxl::read_xlsx("PC1RootLength.xlsx", col_types = c("text")))
treatments <- raw.data$treatment
rownames(raw.data) <- treatments
raw.data$treatment <- NULL
data.ngna <- raw.data
data.ngna[data.ngna == "NG"] <- NA
data.ngna <- sapply(data.ngna, as.numeric)
data.ng0 <- raw.data
data.ng0[data.ng0 == "NG"] <- 0
data.ng0 <- sapply(data.ng0, as.numeric)
data.ngna.aggregated <- data.frame(mean = apply(data.ngna, 1, function(x) mean(x, na.rm = TRUE)),
sd = apply(data.ngna, 1, function(x) sd(x, na.rm = TRUE)))
data.ngna.aggregated[is.na(data.ngna.aggregated)] <- 0
data.ng0.aggregated <- data.frame(mean = apply(data.ng0, 1, function(x) mean(x, na.rm = TRUE)),
sd = apply(data.ng0, 1, function(x) sd(x, na.rm = TRUE)))
data.ng0.aggregated[is.na(data.ng0.aggregated)] <- 0
View(data.ngna.aggregated)
data.germination <- raw.data
data.germination[is.numeric(data.germination)] <- 1
data.germination[data.ng0 == "NG"] <- 0
View(data.germination)
data.germination[data.ng0 == "NG"]
data.germination[data.germination == "NG"]
data.germination == "NG"
data.germination[data.germination == "NG"] <- 0
View(data.germination)
data.germination[is.numeric(data.germination)] <- 1
is.numeric(NA)
data.germination[is.numeric(data.ngna)]
data.germination[is.numeric(data.ngna)] <- 1
data.germination[is.numeric(data.ngna)] <- 1
data.germination
data.germination[is.numeric(data.ngna)] <- 1
is.numeric(data.ngna)
which(is.numeric(data.ngna))
data.germination <- raw.data
data.germination[data.germination == "NG"] <- 0
View(data.germination)
data.ng0 <- sapply(data.ng0, as.numeric)
data.germination[data.germination > 0] <- 1
raw.data <-data.frame(readxl::read_xlsx("PC1RootLength.xlsx", col_types = c("text")))
treatments <- raw.data$treatment
rownames(raw.data) <- treatments
raw.data$treatment <- NULL
data.ngna <- raw.data
data.ngna[data.ngna == "NG"] <- NA
data.ngna <- sapply(data.ngna, as.numeric)
data.ng0 <- raw.data
data.ng0[data.ng0 == "NG"] <- 0
data.ng0 <- sapply(data.ng0, as.numeric)
data.germination <- raw.data
data.germination[data.germination == "NG"] <- 0
data.ng0 <- sapply(data.ng0, as.numeric)
data.germination[data.germination > 0] <- 1
data.ngna.aggregated <- data.frame(mean = apply(data.ngna, 1, function(x) mean(x, na.rm = TRUE)),
sd = apply(data.ngna, 1, function(x) sd(x, na.rm = TRUE)))
data.ngna.aggregated[is.na(data.ngna.aggregated)] <- 0
data.ng0.aggregated <- data.frame(mean = apply(data.ng0, 1, function(x) mean(x, na.rm = TRUE)),
sd = apply(data.ng0, 1, function(x) sd(x, na.rm = TRUE)))
raw.data <-data.frame(readxl::read_xlsx("PC1RootLength.xlsx", col_types = c("text")))
treatments <- raw.data$treatment
rownames(raw.data) <- treatments
raw.data$treatment <- NULL
data.ngna <- raw.data
data.ngna[data.ngna == "NG"] <- NA
data.ngna <- sapply(data.ngna, as.numeric)
data.ng0 <- raw.data
data.ng0[data.ng0 == "NG"] <- 0
data.ng0 <- sapply(data.ng0, as.numeric)
data.germination <- raw.data
data.germination[data.germination == "NG"] <- 0
data.germination <- sapply(data.germination, as.numeric)
data.germination[data.germination > 0] <- 1
data.ngna.aggregated <- data.frame(mean = apply(data.ngna, 1, function(x) mean(x, na.rm = TRUE)),
sd = apply(data.ngna, 1, function(x) sd(x, na.rm = TRUE)))
data.ngna.aggregated[is.na(data.ngna.aggregated)] <- 0
data.ng0.aggregated <- data.frame(mean = apply(data.ng0, 1, function(x) mean(x, na.rm = TRUE)),
sd = apply(data.ng0, 1, function(x) sd(x, na.rm = TRUE)))
data.ng0.aggregated[is.na(data.ng0.aggregated)] <- 0
data.germination.aggregated <- data.frame(mean = apply(data.germination, 1, function(x) mean(x, na.rm = TRUE)),
sd = apply(data.germination, 1, function(x) sd(x, na.rm = TRUE)))
View(data.germination.aggregated)
raw.data <-data.frame(readxl::read_xlsx("PC1RootLength.xlsx", col_types = c("text")))
treatments <- raw.data$treatment
rownames(raw.data) <- treatments
raw.data$treatment <- NULL
data.ngna <- raw.data
data.ngna[data.ngna == "NG"] <- NA
data.ngna <- sapply(data.ngna, as.numeric)
data.ng0 <- raw.data
data.ng0[data.ng0 == "NG"] <- 0
data.ng0 <- sapply(data.ng0, as.numeric)
data.germination <- raw.data
data.germination[data.germination == "NG"] <- 0
data.germination <- sapply(data.germination, as.numeric)
data.germination[data.germination > 0] <- 1
data.ngna.aggregated <- data.frame(mean = apply(data.ngna, 1, function(x) mean(x, na.rm = TRUE)),
sd = apply(data.ngna, 1, function(x) sd(x, na.rm = TRUE)))
data.ngna.aggregated[is.na(data.ngna.aggregated)] <- 0
data.ng0.aggregated <- data.frame(mean = apply(data.ng0, 1, function(x) mean(x, na.rm = TRUE)),
sd = apply(data.ng0, 1, function(x) sd(x, na.rm = TRUE)))
data.ng0.aggregated[is.na(data.ng0.aggregated)] <- 0
data.germination.aggregated <- data.frame(mean = apply(data.germination, 1, function(x) mean(x, na.rm = TRUE)),
sd = apply(data.germination, 1, function(x) sd(x, na.rm = TRUE)))
rownames(data.ngna.aggregated) <- treatments
rownames(data.ng0.aggregated) <- treatments
rownames(data.germination.aggregated) <- treatments
View(data.ngna)
View(data.ngna.aggregated)
View(raw.data)
View(data.germination.aggregated)
rep(c(1,2,3), 20)
install_github("biotungsten/david.sauer.utility@master")
install_github("biotungsten/david.sauer.utility@master")
apply(treat)
library(devtools)
install_github("biotungsten/david.sauer.utility@master")
install_github("biotungsten/david.sauer.utility@master")
install_github("biotungsten/david.sauer.utility@master")
install_github("biotungsten/david.sauer.utility@master")
github_pat()
github_pat()
github_pat()
Sys.getenv("GITHUB_PAT")
Sys.getenc("GITHUB_PATH")
Sys.getenv("GITHUB_PATH")
Sys.getenv("PATH")
Sys.getenv("GITHUB_PATH")
Sys.getenv("GITHUB_PAT")
Sys.setenv(GITHUB_PAT="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")
install_github("biotungsten/david.sauer.utility@master")
library(devtools)
install_github("biotungsten/david.sauer.utility@master")
library(david.sauer.utility)
library(stringr)
library(ggplot2)
library(ggtext)
raw.data <-data.frame(readxl::read_xlsx("PC1RootLength.xlsx", col_types = c("text")))
raw.data <-data.frame(readxl::read_xlsx("PC1RootLength.xlsx", col_types = c("text")))
treatments <- raw.data$treatment
rownames(raw.data) <- treatments
raw.data$treatment <- NULL
data.ngna <- raw.data
data.ngna[data.ngna == "NG"] <- NA
data.ngna <- sapply(data.ngna, as.numeric)
data.ng0 <- raw.data
data.ng0[data.ng0 == "NG"] <- 0
data.ng0 <- sapply(data.ng0, as.numeric)
data.germination <- raw.data
data.germination[data.germination == "NG"] <- 0
data.germination <- sapply(data.germination, as.numeric)
data.germination[data.germination > 0] <- 1
data.ngna.aggregated <- data.frame(mean = apply(data.ngna, 1, function(x) mean(x, na.rm = TRUE)),
sd = apply(data.ngna, 1, function(x) sd(x, na.rm = TRUE)))
data.ngna.aggregated[is.na(data.ngna.aggregated)] <- 0
data.ng0.aggregated <- data.frame(mean = apply(data.ng0, 1, function(x) mean(x, na.rm = TRUE)),
sd = apply(data.ng0, 1, function(x) sd(x, na.rm = TRUE)))
data.ng0.aggregated[is.na(data.ng0.aggregated)] <- 0
data.germination.aggregated <- data.frame(mean = apply(data.germination, 1, function(x) mean(x, na.rm = TRUE)),
sd = apply(data.germination, 1, function(x) sd(x, na.rm = TRUE)))
rownames(data.ngna.aggregated) <- treatments
rownames(data.ng0.aggregated) <- treatments
rownames(data.germination.aggregated) <- treatments
appl2.label.as.vector(treatments)
treatments
apply(treatments, 1, appl2.label.as.vector)
lapply(treatments, appl2.label.as.vector)
d <- lapply(treatments, appl2.label.as.vector)
t(d)
View(d)
d <- sapply(treatments, appl2.label.as.vector)
d
View(d)
t(d)
t(sapply(treatment, appl2.label.as.vector))
t(sapply(treatments, appl2.label.as.vector))
t(sapply(treatments, appl2.label.as.vector))
rep(seq_len(nrow(treatments)), each = 2)
rep(seq_len(nrow(treatments)), each = 2)
seq_len(10)
seq_len(1)
nrow(treatments)
nrow(treatments)
d <- t(sapply(treatments, appl2.label.as.vector))
nrow(d)
rep(seq_len(nrow(d)), each = 2)
rep(seq_len(nrow(d)), each = ncol(d))
rep(seq_len(nrow(d)), each = ncol(raw.data))
d[rep(seq_len(nrow(d)), each = ncol(raw.data)), ]
ncol(d)
View(data.germination)
d <- t(sapply(treatments, appl2.label.as.vector))
data.frame(data.germination)
h <- d[rep(seq_len(nrow(d)), each = ncol(raw.data)), ]
nrow(h)
c(raw.data)
b <- c(raw.data)
b
as.vecotr(raw.data)
as.vector(raw.data)
ö <- as.vector(raw.data)
View(ö)
as.list(raw.data)
ä <- as.list(raw.data)
View(ä)
flatten(ä)
dim(ä)
d
h
raw.data[25]
as.numeric(raw.data[1,])
warnings()
as.numeric(raw.data[2,])
as.numeric(raw.data)
as.numeric(raw.data[,])
raw.data[,]
for (n in seq_len(nrow(raw.data))) {
print(raw.data[n,])
}
raw.data[n,]
raw.data[,1]
raw.data[1,]
c(raw.data[1,])
list(raw.data[1,])
unname(list(raw.data[1,]))
vector(raw.data[1,])
vector(raw.data[1,])
pc.table.as.concentration.table <- function(df, treatments) {
treatments <- t(sapply(treatments, appl2.label.as.vector))
new.df <- treatments[rep(seq_len(nrow(treatments)), each = ncol(df)), ]
val <- c()
for (n in seq_len(ncol(df))) {
val <- val + df[n,]
}
}
pc.table.as.concentration.table(data.ngna, treatments)
pc.table.as.concentration.table <- function(df, treatments) {
treatments <- t(sapply(treatments, appl2.label.as.vector))
new.df <- treatments[rep(seq_len(nrow(treatments)), each = ncol(df)), ]
val <- c()
for (n in seq_len(ncol(df))) {
print(n)
val <- val + df[n,]
}
}
pc.table.as.concentration.table(data.ngna, treatments)
data.ngna
pc.table.as.concentration.table <- function(df, treatments) {
treatments <- t(sapply(treatments, appl2.label.as.vector))
new.df <- treatments[rep(seq_len(nrow(treatments)), each = nrow(df)), ]
val <- c()
for (n in seq_len(ncol(df))) {
print(n)
val <- val + df[n,]
}
return(val)
}
pc.table.as.concentration.table(data.ngna, treatments)
data.ngna[17,]
data.ngna
pc.table.as.concentration.table <- function(df, treatments) {
treatments <- t(sapply(treatments, appl2.label.as.vector))
new.df <- treatments[rep(seq_len(nrow(treatments)), each = ncol(df)), ]
val <- c()
for (n in seq_len(nrow(df))) {
val <- val + df[n,]
}
return(val)
}
pc.table.as.concentration.table(data.ngna, treatments)
pc.table.as.concentration.table <- function(df, treatments) {
treatments <- t(sapply(treatments, appl2.label.as.vector))
new.df <- treatments[rep(seq_len(nrow(treatments)), each = ncol(df)), ]
val <- c()
for (n in seq_len(nrow(df))) {
val <- val + df[n,]
print(val)
}
return(val)
}
pc.table.as.concentration.table(data.ngna, treatments)
pc.table.as.concentration.table <- function(df, treatments) {
treatments <- t(sapply(treatments, appl2.label.as.vector))
new.df <- treatments[rep(seq_len(nrow(treatments)), each = ncol(df)), ]
val <- c()
for (n in seq_len(nrow(df))) {
val <- val + df[n,]
print(df[n,])
}
return(val)
}
pc.table.as.concentration.table(data.ngna, treatments)
pc.table.as.concentration.table <- function(df, treatments) {
treatments <- t(sapply(treatments, appl2.label.as.vector))
new.df <- treatments[rep(seq_len(nrow(treatments)), each = ncol(df)), ]
val <- df[1,]
for (n in seq_len(nrow(df)-1)) {
val <- val + df[(n+1),]
print(df[n,])
print(val)
print("")
}
return(val)
}
pc.table.as.concentration.table(data.ngna, treatments)
o <- c(1,2,3)
o <- o + c(4,5,6)
o
pc.table.as.concentration.table <- function(df, treatments) {
treatments <- t(sapply(treatments, appl2.label.as.vector))
new.df <- treatments[rep(seq_len(nrow(treatments)), each = ncol(df)), ]
val <- df[1,]
for (n in seq_len(nrow(df)-1)) {
val <- c(val, df[(n+1),])
print(df[n,])
print(val)
print("")
}
return(val)
}
pc.table.as.concentration.table(data.ngna, treatments)
a <- pc.table.as.concentration.table(data.ngna, treatments)
a
unname(a)
#unname(a)
pc.table.as.concentration.table <- function(df, treatments) {
treatments <- t(sapply(treatments, appl2.label.as.vector))
new.df <- treatments[rep(seq_len(nrow(treatments)), each = ncol(df)), ]
val <- df[1,]
for (n in seq_len(nrow(df)-1)) {
val <- c(val, df[(n+1),])
}
new.df$response <- unname(val)
return(new.df)
}
pc.table.as.concentration.table(data.ngna, treatments)
pc.table.as.concentration.table <- function(df, treatments) {
treatments <- t(sapply(treatments, appl2.label.as.vector))
new.df <- data.frame(treatments[rep(seq_len(nrow(treatments)), each = ncol(df)), ])
val <- df[1,]
for (n in seq_len(nrow(df)-1)) {
val <- c(val, df[(n+1),])
}
new.df$response <- unname(val)
return(new.df)
}
pc.table.as.concentration.table(data.ngna, treatments)
install_github("biotungsten/david.sauer.utility@master")
library(david.sauer.utility)
library(stringr)
library(ggplot2)
library(ggtext)
pc.table.as.concentration.table <- function(df, treatments) {
treatments <- t(sapply(treatments, appl2.label.as.vector))
new.df <- data.frame(treatments[rep(seq_len(nrow(treatments)), each = ncol(df)), ])
val <- df[1,]
for (n in seq_len(nrow(df)-1)) {
val <- c(val, df[(n+1),])
}
new.df$response <- unname(val)
return(new.df)
}
raw.data <-data.frame(readxl::read_xlsx("PC1RootLength.xlsx", col_types = c("text")))
treatments <- raw.data$treatment
rownames(raw.data) <- treatments
raw.data$treatment <- NULL
data.ngna <- raw.data
data.ngna[data.ngna == "NG"] <- NA
data.ngna <- data.frame(sapply(data.ngna, as.numeric))
data.ng0 <- raw.data
data.ng0[data.ng0 == "NG"] <- 0
data.ng0 <- data.frame(sapply(data.ng0, as.numeric))
data.germination <- raw.data
data.germination[data.germination == "NG"] <- 0
data.germination <- sapply(data.germination, as.numeric)
data.germination[data.germination > 0] <- 1
data.germination <- data.frame(data.germination)
data.ngna.aggregated <- data.frame(mean = apply(data.ngna, 1, function(x) mean(x, na.rm = TRUE)),
sd = apply(data.ngna, 1, function(x) sd(x, na.rm = TRUE)))
data.ngna.aggregated[is.na(data.ngna.aggregated)] <- 0
data.ng0.aggregated <- data.frame(mean = apply(data.ng0, 1, function(x) mean(x, na.rm = TRUE)),
sd = apply(data.ng0, 1, function(x) sd(x, na.rm = TRUE)))
data.ng0.aggregated[is.na(data.ng0.aggregated)] <- 0
data.germination.aggregated <- data.frame(mean = apply(data.germination, 1, function(x) mean(x, na.rm = TRUE)),
sd = apply(data.germination, 1, function(x) sd(x, na.rm = TRUE)))
rownames(data.ngna.aggregated) <- treatments
rownames(data.ng0.aggregated) <- treatments
rownames(data.germination.aggregated) <- treatments
data.ngna.concentration.table <- pc.table.as.concentration.table(data.ngna, treatments)
data.ng0.concentration.table <- pc.table.as.concentration.table(data.ng0, treatments)
data.germination.concentration.table <- pc.table.as.concentration.table(data.germination, treatments)
View(data.germination.concentration.table)
data.ngna.concentration.table.normalized <- normalize.data(data.ngna.concentration.table, "response", "substance", "control")
View(data.ngna.concentration.table.normalized)
View(data.ngna.aggregated)
data.ngna.aggregated["ctrl", ]
data.ngna.aggregated["CTRL", ]
data.ngna.concentration.table.normalized <- normalize.data(data.ngna.concentration.table, "response", NA, NA, data.ngna.aggregated["CTRL", ][1], TRUE)
apply(data.ngna.concentration.table, 1, function(x) {
return(as.numeric(x[3])/normalize.value)
})
apply(data.ngna.concentration.table, 1, function(x) {
return(as.numeric(x[3])/1)
})
k <- apply(data.ngna.concentration.table, 1, function(x) {
return(as.numeric(x[3])/1)
})
data.ngna.concentration.table[3] <- k
View(data.ngna.concentration.table)
as.idx.colname(data.ngna.concentration.table, "response")
data.ngna.aggregated["CTRL", ][1]
raw.data <-data.frame(readxl::read_xlsx("PC1RootLength.xlsx", col_types = c("text")))
treatments <- raw.data$treatment
rownames(raw.data) <- treatments
raw.data$treatment <- NULL
data.ngna <- raw.data
data.ngna[data.ngna == "NG"] <- NA
data.ngna <- data.frame(sapply(data.ngna, as.numeric))
data.ng0 <- raw.data
data.ng0[data.ng0 == "NG"] <- 0
data.ng0 <- data.frame(sapply(data.ng0, as.numeric))
data.germination <- raw.data
data.germination[data.germination == "NG"] <- 0
data.germination <- sapply(data.germination, as.numeric)
data.germination[data.germination > 0] <- 1
data.germination <- data.frame(data.germination)
data.ngna.aggregated <- data.frame(mean = apply(data.ngna, 1, function(x) mean(x, na.rm = TRUE)),
sd = apply(data.ngna, 1, function(x) sd(x, na.rm = TRUE)))
data.ngna.aggregated[is.na(data.ngna.aggregated)] <- 0
data.ng0.aggregated <- data.frame(mean = apply(data.ng0, 1, function(x) mean(x, na.rm = TRUE)),
sd = apply(data.ng0, 1, function(x) sd(x, na.rm = TRUE)))
data.ng0.aggregated[is.na(data.ng0.aggregated)] <- 0
data.germination.aggregated <- data.frame(mean = apply(data.germination, 1, function(x) mean(x, na.rm = TRUE)),
sd = apply(data.germination, 1, function(x) sd(x, na.rm = TRUE)))
rownames(data.ngna.aggregated) <- treatments
rownames(data.ng0.aggregated) <- treatments
rownames(data.germination.aggregated) <- treatments
data.ngna.concentration.table <- pc.table.as.concentration.table(data.ngna, treatments)
data.ng0.concentration.table <- pc.table.as.concentration.table(data.ng0, treatments)
data.germination.concentration.table <- pc.table.as.concentration.table(data.germination, treatments)
data.ngna.concentration.table.normalized <- normalize.data(data.ngna.concentration.table, "response", NA, NA, as.numeric(data.ngna.aggregated["CTRL", ][1]), TRUE)
data.ng0.concentration.table.normalized <-
View(data.ngna.concentration.table.normalized)
as.numeric(data.ngna.aggregated["CTRL", ][1])
0.20*1.48
View(data.ngna.concentration.table)
data.ngna.catechol <- filter.data.by.substances(data.ngna.concentration.table.normalized, c("catechol"))
View(data.ngna.catechol)
View(data.ngna.concentration.table)
data.ngna.concentration.table.normalized[data.ngna.concentration.table.normalized[,1] %in% c("catechol", "control"), ]
levels(data.ngna.concentration.table.normalized$X2)
as.numeric.factor(filtered.data[concentration.colindex])
b <- data.ngna.concentration.table.normalized[data.ngna.concentration.table.normalized[,1] %in% c("catechol", "control"), ]
as.numeric.factor(b[2])
as.numeric.factor
library(david.sauer.utility)
as.idx.colname()
as.numeric.factor()
